use clap::{App, Arg, SubCommand};

pub fn build_cli() -> App<'static, 'static> {
    App::new("cgats")
        .version(crate_version!())
        .author(crate_authors!())
        .about(crate_description!())
        .arg(Arg::with_name("files")
            .help("CGATS files")
            .value_name("FILE")
            .multiple(true))
        .subcommand(SubCommand::with_name("average")
            .alias("avg")
            .about("Average 2 or more CGATS color files")
            .arg(Arg::with_name("output")
                .value_name("output_file")
                .takes_value(true)
                .short("f")
                .long("file")
                .help("Output results to file"))
            .arg(Arg::with_name("comparefiles")
                .value_name("FILE")
                .multiple(true)
                .required(true)))
        .subcommand(SubCommand::with_name("cat")
            .aliases(&["concatenate", "concat", "append"])
            .about("Concatenate 2 or more CGATS color files")
            .arg(Arg::with_name("output")
                .value_name("output_file")
                .takes_value(true)
                .short("f")
                .long("file")
                .help("Output results to file"))
            .arg(Arg::with_name("comparefiles")
                .value_name("FILE")
                .multiple(true)
                .required(true)))
        .subcommand(SubCommand::with_name("delta")
            .aliases(&["de", "deltae"])
            .about("Calculate the Delta E between each sample in two CGATS files")
            .arg(Arg::with_name("output")
                .value_name("output_file")
                .takes_value(true)
                .short("f")
                .long("file")
                .help("Output results to file"))
            .arg(Arg::with_name("method")
                .value_name("de_method")
                .takes_value(true)
                .short("m")
                .long("method")
                .help("Delta E method to use in the calculations")
                .possible_values(&["2000", "1994", "1994t", "cmc1", "cmc2", "1976"]))
            .arg(Arg::with_name("comparefiles")
                .value_name("FILE")
                .multiple(true)
                .required(true)))
}